<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="179324" started-at="2016-10-16T18:13:14Z" finished-at="2016-10-16T18:16:13Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="179324" started-at="2016-10-16T18:13:14Z" finished-at="2016-10-16T18:16:13Z">
      <class name="codingtest.excelfilereading">
        <test-method status="PASS" signature="excelpractise(java.lang.String, java.lang.String)[pri:0, instance:codingtest.excelfilereading@4f652035]" name="excelpractise" duration-ms="53623" started-at="2016-10-16T23:43:16Z" data-provider="getData" finished-at="2016-10-16T23:44:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sonam.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234sonam]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelpractise -->
        <test-method status="PASS" signature="excelpractise(java.lang.String, java.lang.String)[pri:0, instance:codingtest.excelfilereading@4f652035]" name="excelpractise" duration-ms="46673" started-at="2016-10-16T23:44:10Z" data-provider="getData" finished-at="2016-10-16T23:44:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sonam2@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelpractise -->
        <test-method status="PASS" signature="excelpractise(java.lang.String, java.lang.String)[pri:0, instance:codingtest.excelfilereading@4f652035]" name="excelpractise" duration-ms="50184" started-at="2016-10-16T23:44:56Z" data-provider="getData" finished-at="2016-10-16T23:45:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sonam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelpractise -->
        <test-method status="FAIL" signature="excelpractise(java.lang.String, java.lang.String)[pri:0, instance:codingtest.excelfilereading@4f652035]" name="excelpractise" duration-ms="26806" started-at="2016-10-16T23:45:46Z" data-provider="getData" finished-at="2016-10-16T23:46:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sonam.sharma2407@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sonam@123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at codingtest.excelfilereading.excelpractise(excelfilereading.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelpractise -->
      </class> <!-- codingtest.excelfilereading -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
